{"version":3,"sources":["home-component.js","index.tsx"],"names":["GetUrlComponent","e","preventDefault","this","props","onSubmit","url","accepted","length","reader","FileReader","onload","x","onImport","JSON","parse","target","result","readAsText","accept","onDrop","importResult","className","acceptClassName","rejectClassName","disableClick","submit","value","placeholder","onChange","type","React","Component","ResultSection","state","active","errors","warnings","expandable","children","onClick","setState","title","status","map","error","index","key","DebugSection","href","rel","_","results","entries","flatMap","category","debug","toRow","links","link","onValidate","Results","amp","headers","structured","numObjects","contentId","og","seo","robots","onDownload","HomeComponent","response","loading","request","post","process","then","body","catch","message","loadRules","blob","Blob","stringify","FileSaver","saveAs","processUrl","import","downloadResponse","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1df86801.chunk.js","sourcesContent":["import './app.scss';\n\nimport React from 'react';\nimport request from 'superagent-bluebird-promise';\nimport Dropzone from 'react-dropzone';\nimport _ from 'lodash';\n\nimport FileSaver from 'file-saver';\n\nclass GetUrlComponent extends React.Component {\n  submit(e) {\n    e.preventDefault();\n    this.props.onSubmit(this.props.url);\n  }\n\n  importResult(accepted) {\n    if(accepted.length !== 1)\n      return;\n\n    const reader = new FileReader();\n    reader.onload = (x) => this.props.onImport(JSON.parse(x.target.result));\n    reader.readAsText(accepted[0]);\n  }\n\n  render() {\n    return <Dropzone accept=\"application/json\"\n                     onDrop={(accepted) => this.importResult(accepted)}\n                     className=\"url-dropzone\"\n                     acceptClassName=\"url-dropzone-accept\"\n                     rejectClassName=\"url-dropzone-reject\"\n                     disableClick={true}>\n      <form className=\"url-container\" onSubmit={(e) => this.submit(e)} >\n        <input className=\"url-input\" value={this.props.url} placeholder=\"Enter Url\" onChange={(e) => this.props.onChange(e.target.value)}/>\n        <input type=\"submit\" className=\"url-go\" value=\"Go!\" />\n      </form>\n    </Dropzone>;\n  }\n}\n\nclass ResultSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    }\n  }\n\n  render() {\n    const errors = this.props.result.errors || [];\n    const warnings = this.props.result.warnings || [];\n    const expandable = this.props.children || errors.length > 0 || warnings.length > 0;\n    return <section className={`result ${this.state.active && 'active'}`}>\n      <header className={`result-header ${expandable && \"expandable\"}`} onClick={() => expandable && this.setState({active: !this.state.active})}>\n        <div className=\"clearfix\">\n          <h2 className=\"result-title\">{this.props.title}</h2>\n          <h3 className={`result-status result-status-${this.props.result.status} ${warnings.length > 0 ? \"result-status-WARN\" : \"\"}`}>\n            {this.props.result.status}\n          </h3>\n        </div>\n      </header>\n      <div className=\"result-body\">\n        {this.props.children && <div>{this.props.children}</div>}\n\n        {errors.length > 0 && <div>\n          <h4>Errors:</h4>\n          <ul>{errors.map((error, index) => <li key={index}>{error}</li>)}</ul>\n        </div>}\n\n        {warnings.length > 0 && <div>\n          <h4>Warnings:</h4>\n          <ul>{warnings.map((error, index) => <li key={index}>{error}</li>)}</ul>\n        </div>}\n      </div>\n    </section>\n  }\n}\n\nfunction toRow(category, key, value) {\n  return <tr key={`${category}/${key}`}>\n    <td>{category}</td>\n    <td className=\"debug-key\">{key}</td>\n    <td>{value}</td>\n  </tr>;\n}\n\nclass DebugSection extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: false\n    }\n  }\n\n  render() {\n    return <section className={`result ${this.state.active && 'active'}`}>\n      <header className={`result-header expandable`} onClick={() => this.setState({active: !this.state.active})}>\n        <div className=\"clearfix\">\n          <h2 className=\"result-title\">Debugging</h2>\n        </div>\n      </header>\n      <div className=\"result-body\">\n        <div>For a full list of rules, please see <a href=\"https://github.com/quintype/quintype-validator\" target=\"_blank\" rel=\"noopener noreferrer\">Readme.md</a></div>\n        <div>\n          <table>\n            <thead>\n              <tr>\n                <th>Category</th>\n                <th>Key</th>\n                <th>Value</th>\n              </tr>\n            </thead>\n            <tbody>\n              {_(this.props.results).entries().flatMap(([category, result]) => _(result.debug).entries().map(([key, value]) => toRow(category, key, value)).value()).value()}\n            </tbody>\n          </table>\n        </div>\n        {this.props.links.length > 0 && <div>\n          <h4>Links:</h4>\n          <ul>{this.props.links.map((link, index) => <li key={index}><button onClick={() => this.props.onValidate(link)}>validate</button> - {link}</li>)}</ul>\n        </div>}\n      </div>\n    </section>\n  }\n}\n\nclass Results extends React.Component {\n  render() {\n    return <div>\n      <ResultSection title=\"AMP\" result={this.props.results.amp} />\n      <ResultSection title=\"Caching Headers\" result={this.props.results.headers} />\n      <ResultSection title=\"Structured Data\" result={this.props.results.structured}>\n        <div>Number of Objects: {this.props.results.structured.numObjects}</div>\n        <div>Content Id: {this.props.results.structured.contentId}</div>\n      </ResultSection>\n      <ResultSection title=\"Facebook OG Tags\" result={this.props.results.og} />\n      <ResultSection title=\"SEO Rules\" result={this.props.results.seo} />\n      <ResultSection title=\"Robots\" result={this.props.results.robots} />\n\n      <DebugSection results={this.props.results} links={this.props.links} onValidate={this.props.onValidate}/>\n\n      <button className=\"results-download\" onClick={() => this.props.onDownload()}>Download As JSON</button>\n    </div>;\n  }\n}\n\nexport class HomeComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: \"\",\n      response: null,\n      loading: false,\n      error: null\n    };\n  }\n\n  loadRules(url) {\n    request.post(`${process.env.REACT_APP_API_HOST || \"\"}/api/validate.json`, {url: url})\n           .then(response => this.setState({response: response.body, loading: false, url: response.body.url}))\n           .catch(e => this.setState({loading: false, error: e.message}));\n  }\n\n  processUrl(url) {\n    if(this.state.loading)\n      return;\n\n    this.setState({\n      url: url,\n      loading: true,\n      error: null\n    }, () => this.loadRules(url));\n  }\n\n  downloadResponse() {\n    const blob = new Blob([JSON.stringify(this.state.response)], {type: \"application/json;charset=utf-8\"});\n    FileSaver.saveAs(blob, \"validator.json\");\n  }\n\n  import(response) {\n    this.setState({\n      response: response,\n      error: null,\n      loading: false,\n      url: response.url\n    })\n  }\n\n  render() {\n    return <div>\n      <GetUrlComponent onSubmit={(url) => this.processUrl(url)} url={this.state.url} onChange={(url) => this.setState({url: url})} onImport={(result) => this.import(result)}/>\n      {this.state.error && <div className=\"error-message\">{this.state.error}</div>}\n      {this.state.loading && <div className=\"loading\">Crunching Numbers</div>}\n      {!this.state.loading && this.state.response && <Results results={this.state.response.results}\n                                                              links={this.state.response.links}\n                                                              onValidate={(url) => this.processUrl(url)}\n                                                              url={this.state.response.url}\n                                                              onDownload={() => this.downloadResponse()} />}\n    </div>;\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport {HomeComponent} from './home-component';\n\nReactDOM.render(<HomeComponent />, document.getElementById('root'));\n"],"sourceRoot":""}